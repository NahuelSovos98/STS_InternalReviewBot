<Activity mc:Ignorable="sap sap2010" x:Class="LA_StateBalancing_CompleteReviewSheet" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_WorksheetReviewSheet" Type="InArgument(x:String)" />
    <x:Property Name="in_ListPathReviewSheet" Type="InArgument(scg:List(x:String))" />
  </x:Members>
  <this:LA_StateBalancing_CompleteReviewSheet.in_WorksheetReviewSheet>
    <InArgument x:TypeArguments="x:String" />
  </this:LA_StateBalancing_CompleteReviewSheet.in_WorksheetReviewSheet>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1822,3705</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>LA_StateBalancing_CompleteReviewSheet_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="LA_StateBalancing_CompleteReviewSheet" sap:VirtualizedContainerService.HintSize="1832,3640" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtLuissianaReturns" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtNonLocalReturns" />
      <Variable x:TypeArguments="s:String[]" Name="array_strPathReviewSheet" />
      <Variable x:TypeArguments="x:String" Name="str_pathReviewSheet" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1770,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;LA_StateBalancing_CompleteReviewSheet starts&quot;]" />
    <TryCatch DisplayName="Try Catch Check returns of Luissiana" sap:VirtualizedContainerService.HintSize="1770,3265" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Check returns and complete review sheet" sap:VirtualizedContainerService.HintSize="1732,3037" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Get Luissiana Returns" sap:VirtualizedContainerService.HintSize="1670,776" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(x:String)" Name="ListColumns" />
              <Variable x:TypeArguments="x:Int32" Name="ColumnIndex" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadCsvFile DataTable="[dtLuissianaReturns]" Delimitator="Comma" DisplayName="Read CSV - dtLuissianaReturns" FilePath="[in_Config(&quot;StateBalancing_LA_TemporalCsvFile&quot;).ToString]" sap:VirtualizedContainerService.HintSize="532,153" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" IncludeColumnNames="False" />
            <Assign DisplayName="Assign / Listcolumns" sap:VirtualizedContainerService.HintSize="532,82" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[ListColumns]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[in_Config("StateBalancing_LA_TableColumns").ToString.Split(","c).ToList]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="As It does not save the column names, add them to the datatable" CurrentIndex="[ColumnIndex]" DisplayName="For Each column " sap:VirtualizedContainerService.HintSize="532,350" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[ListColumns]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign ColumnName" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[dtLuissianaReturns.Columns(ColumnIndex).ColumnName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
          <ui:FilterDataTable sap2010:Annotation.AnnotationText="Get - NotLocalStates returns" DataTable="[dtLuissianaReturns]" DisplayName="Filter Data Table by  ReturnType = &quot;N&quot;" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1670,192" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtNonLocalReturns]" SelectColumnsMode="Keep">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["ReturnType"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">["N"]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <x:Null />
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:FilterDataTable>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtNonLocalReturns]" DisplayName="For Each Row in dtNonLocalReturns" sap:VirtualizedContainerService.HintSize="1670,1878" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="NonLocalRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1636,1761" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dtReturnsByLegalEntity" />
                    <Variable x:TypeArguments="x:Double" Name="GrossSalesToCompare" />
                    <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - GrossSales To compare" sap:VirtualizedContainerService.HintSize="1574,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[GrossSalesToCompare]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[Cdbl(NonLocalRow("GrossSales").ToString)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1574,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[&quot;Comparison to the following NonLocal Return &lt;&quot;+NonLocalRow(&quot;ReturnName&quot;).ToString+&#xA;&quot;&gt; : LegalEntity: &lt;&quot;+NonLocalRow(&quot;LegalEntity&quot;).ToString+&#xA;&quot;&gt; and Gross Sales: &lt;&quot;+NonLocalRow(&quot;GrossSales&quot;).ToString+&quot;&gt;.&quot;]" />
                  <ui:FilterDataTable sap2010:Annotation.AnnotationText="Get Local returns corresponding to the NonLocalReturn (LA R1029)&#xA;- ReturnType != NonLocalReturn.ReturnType&#xA;- LegalEntity = NonLocalReturn.LegalEntity" DataTable="[dtLuissianaReturns]" DisplayName="Filter Data Table by LegalEntity and ReturnType" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="1574,218" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dtReturnsByLegalEntity]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["LegalEntity"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">[NonLocalRow("LegalEntity").ToString]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTEQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["ReturnType"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">[NonLocalRow("ReturnType").ToString]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:FilterDataTable>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtReturnsByLegalEntity]" DisplayName="For Each Row in dtReturnsByLegalEntity" sap:VirtualizedContainerService.HintSize="1574,1138" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                        </ActivityAction.Argument>
                        <If Condition="[CurrentRow(&quot;FilingType&quot;).ToString.Equals(&quot;Q&quot;)]" DisplayName="If FilingType is quarterly" sap:VirtualizedContainerService.HintSize="1540,1021" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Then>
                            <Sequence DisplayName="Write Quarterly row to Review Sheet" sap:VirtualizedContainerService.HintSize="558,701" sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign - ExceptionMessage" sap:VirtualizedContainerService.HintSize="496,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[in_Config("StateBalancing_LA_ExceptionMessageQuarterlyReturn").ToString + CurrentRow("GrossSales").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Sequence DisplayName="get the correct path of Reviewsheet" sap:VirtualizedContainerService.HintSize="496,315" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign - path review sheet" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[array_strPathReviewSheet]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[in_ListPathReviewSheet.Where(Function (x) x.Contains(CurrentRow("CustomerName").ToString)).ToArray]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign - path review sheet" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_7">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[str_pathReviewSheet]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[array_strPathReviewSheet(0).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddNewRow workflow" sap:VirtualizedContainerService.HintSize="496,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Sub-Process\ReviewSheet\AddNewRow.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_PathReviewSheetFile">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_pathReviewSheet" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_WorksheetReviewSheet">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_WorksheetReviewSheet" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="ExceptionMessage" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ReturnName">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CurrentRow(&quot;ReturnName&quot;).ToString" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_LegalEntity">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CurrentRow(&quot;LegalEntity&quot;).ToString" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ReturnsTableStartCell">
                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;ReviewSheet_StartCellReturnsFailedTable&quot;).ToString" />
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <If Condition="[Not GrossSalesToCompare.Equals(Cdbl(CurrentRow(&quot;GrossSales&quot;).ToString))]" DisplayName="If Gross Sales are not the same" sap:VirtualizedContainerService.HintSize="937,861" sap2010:WorkflowViewState.IdRef="If_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Write Monthly row to Review sheet" sap:VirtualizedContainerService.HintSize="558,701" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - ExceptionMessage" sap:VirtualizedContainerService.HintSize="496,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["Gross sales are not the same for return &lt;"+NonLocalRow("ReturnName").ToString+"&gt;. Gross sales expected: &lt;"+GrossSalesToCompare.ToString+"&gt; but it is &lt;"+CurrentRow("GrossSales").ToString+"&gt;"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Sequence DisplayName="get the correct path of Reviewsheet" sap:VirtualizedContainerService.HintSize="496,315" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign - path review sheet" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:String[]">[array_strPathReviewSheet]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:String[]">[in_ListPathReviewSheet.Where(Function (x) x.Contains(CurrentRow("CustomerName").ToString)).ToArray]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign - path review sheet" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[str_pathReviewSheet]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[array_strPathReviewSheet(0).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddNewRow workflow" sap:VirtualizedContainerService.HintSize="496,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Sub-Process\ReviewSheet\AddNewRow.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_PathReviewSheetFile">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_pathReviewSheet" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_WorksheetReviewSheet">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_WorksheetReviewSheet" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="ExceptionMessage" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ReturnName">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CurrentRow(&quot;ReturnName&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_LegalEntity">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CurrentRow(&quot;LegalEntity&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ReturnsTableStartCell">
                                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;ReviewSheet_StartCellReturnsFailedTable&quot;).ToString" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;Gross sales for this return is ok.&quot;]" />
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1736,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Exception trying to complete Review sheet. Details: &quot; + exception.Message + &quot; at Source: &quot; + exception.Source]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <ui:DeleteFileX DisplayName="Delete Temp CSV File" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[in_Config(&quot;StateBalancing_LA_TemporalCsvFile&quot;).ToString]" />
      </TryCatch.Finally>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1770,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;LA_StateBalancing_CompleteReviewSheet ends&quot;]" />
  </Sequence>
</Activity>